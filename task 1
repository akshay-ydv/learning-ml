{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5407,"databundleVersionId":868283,"sourceType":"competition"}],"dockerImageVersionId":30746,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n# Load the dataset\n# Note: Replace 'file_path' with the correct path to your dataset in the Kaggle environment\n# Example path for datasets from competitions or uploaded: '/kaggle/input/dataset-name/file.csv'\nfile_path = '/kaggle/input/house-prices-advanced-regression-techniques/sample_submission.csv'\ndata = pd.read_csv(file_path)\n\n# Display the first few rows of the dataset to verify loading\nprint(data.head())","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-27T14:19:24.492863Z","iopub.execute_input":"2024-07-27T14:19:24.494215Z","iopub.status.idle":"2024-07-27T14:19:24.519641Z","shell.execute_reply.started":"2024-07-27T14:19:24.494177Z","shell.execute_reply":"2024-07-27T14:19:24.518434Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n# Selecting relevant features and the target variable\n# Replace 'square_footage', 'bedrooms', 'bathrooms', and 'price' with the actual column names\nfeatures = ['Id']\ntarget = 'SalePrice'\n\n# Handling missing values (if any)\ndata = data.dropna(subset=features + [target])\n\n# Splitting the data into features (X) and target (y)\nX = data[features]\ny = data[target]\n\n# Splitting the dataset into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Initializing and training the linear regression model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Making predictions on the testing set\ny_pred = model.predict(X_test)\n\n# Evaluating the model\nmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f\"Mean Squared Error: {mse}\")\nprint(f\"R-squared: {r2}\")\n\n# Visualizing the relationship between actual and predicted prices\nplt.scatter(y_test, y_pred)\nplt.xlabel(\"Actual Prices\")\nplt.ylabel(\"Predicted Prices\")\nplt.title(\"Actual vs Predicted Prices\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-27T14:20:22.926351Z","iopub.execute_input":"2024-07-27T14:20:22.926759Z","iopub.status.idle":"2024-07-27T14:20:23.256400Z","shell.execute_reply.started":"2024-07-27T14:20:22.926728Z","shell.execute_reply":"2024-07-27T14:20:23.255188Z"},"trusted":true},"execution_count":null,"outputs":[]}]}